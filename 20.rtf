{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 Courier New;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;\red85\green140\blue52;\red251\green4\blue7;\red0\green3\blue255;}
{\*\listtable
{\list\listtemplateid1\listhybrid
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F;}{\levelnumbers;}\f0\fs24\b0\i0\fi-360\li720\lin720}{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F;}{\levelnumbers;}\f0\fs24\b0\i0\fi-360\li720\lin720}{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F;}{\levelnumbers;}\f0\fs24\b0\i0\fi-360\li720\lin720}{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F;}{\levelnumbers;}\f0\fs24\b0\i0\fi-360\li720\lin720}{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs28\b1\i0\cf3 \loch\af0\hich\af0\dbch\af0\uc1\u21407\'3F\u39064\'3F\u20869\'3F\u23481\'3F\u65306\'3A}
\par\plain \f0\fs28\b1\i0\cf3
\par\plain {\f0\fs24\b1\i0 20. Valid Parentheses}
\par\plain {\f0\fs24\b0\i0 Given a string containing just the characters '(', ')', '\{', '\}', '[' and ']', determine if the input string is valid.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 An input string is valid if:}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \tx240\tx720\li720\fi-720\ltrch\loch \ls1\ilvl0{\listtext\f0\fs24\b0\i0	\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F	}{\f0\fs24\b0\i0 Open brackets must be closed by the same type of brackets.}
\par\pard\plain \tx240\tx720\li720\fi-720\ltrch\loch \ls1\ilvl0{\listtext\f0\fs24\b0\i0	\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F	}{\f0\fs24\b0\i0 Open brackets must be closed in the correct order.}
\par\pard\plain \fi360\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0 Note that an empty string is also considered valid.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0\cf4 Example 1:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Input: "()"}
\par\plain {\f0\fs24\b0\i0 Output: true}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0\cf4 Example 2:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Input: "()[]\{\}"}
\par\plain {\f0\fs24\b0\i0 Output: true}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0\cf4 Example 3:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Input: "(]"}
\par\plain {\f0\fs24\b0\i0 Output: false}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0\cf4 Example 4:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Input: "([)]"}
\par\plain {\f0\fs24\b0\i0 Output: false}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0\cf4 Example 5:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Input: "\{[]\}"}
\par\plain {\f0\fs24\b0\i0 Output: true}
\par\plain \f0\fs28\b1\i0\cf3
\par\plain \f0\fs28\b1\i0\cf3
\par\plain {\f0\fs28\b1\i0\cf3 \loch\af0\hich\af0\dbch\af0\uc1\u31532\'3F\u19968\'3F\u36941\'3F\u35299\'3F\u27861\'3F\u20195\'3F\u30721\'3F\u65306\'3A}
\par\plain {\f0\fs20\b0\i0\cf5 //\loch\af0\hich\af0\dbch\af0\uc1\u26102\'3F\u38388\'3F\u22797\'3F\u26434\'3F\u24230\'3FO(n) 4ms beats 100%}
\par\plain {\f0\fs20\b0\i0\cf1 bool isValid(string s) \{}
\par\plain \f0\fs20\b0\i0\cf1
\par\plain {\f0\fs20\b0\i0\cf1     if (s == "")}
\par\plain {\f0\fs20\b0\i0\cf1         return true;}
\par\plain {\f0\fs20\b0\i0\cf1     stack<char>s1, s2;}
\par\plain \f0\fs20\b0\i0\cf1
\par\plain {\f0\fs20\b0\i0\cf1     for (auto c : s)}
\par\plain {\f0\fs20\b0\i0\cf1         s1.push(c);}
\par\plain \f0\fs20\b0\i0\cf1
\par\plain {\f0\fs20\b0\i0\cf1     while (!s1.empty())\{}
\par\plain {\f0\fs20\b0\i0\cf1         if (!s2.empty())\{}
\par\plain {\f0\fs20\b0\i0\cf1             char ch = s2.top();}
\par\plain {\f0\fs20\b0\i0\cf1             if (ch == '(' || ch == '\{' || ch == '[')}
\par\plain {\f0\fs20\b0\i0\cf1                 return false;}
\par\plain {\f0\fs20\b0\i0\cf1             else if (ch == ')')\{}
\par\plain {\f0\fs20\b0\i0\cf1                 if (s1.top() == '(')\{}
\par\plain {\f0\fs20\b0\i0\cf1                 s2.pop();}
\par\plain {\f0\fs20\b0\i0\cf1                 \}}
\par\plain {\f0\fs20\b0\i0\cf1                 else\{}
\par\plain {\f0\fs20\b0\i0\cf1                 s2.push(s1.top());}
\par\plain {\f0\fs20\b0\i0\cf1                 \}}
\par\plain {\f0\fs20\b0\i0\cf1             \}}
\par\plain {\f0\fs20\b0\i0\cf1             else if (ch == '\}')\{}
\par\plain {\f0\fs20\b0\i0\cf1                 if (s1.top() == '\{')\{}
\par\plain {\f0\fs20\b0\i0\cf1                 s2.pop();}
\par\plain {\f0\fs20\b0\i0\cf1                 \}}
\par\plain {\f0\fs20\b0\i0\cf1                 else\{}
\par\plain {\f0\fs20\b0\i0\cf1                 s2.push(s1.top());}
\par\plain {\f0\fs20\b0\i0\cf1                 \}}
\par\plain {\f0\fs20\b0\i0\cf1             \}}
\par\plain {\f0\fs20\b0\i0\cf1             else if (ch == ']')\{}
\par\plain {\f0\fs20\b0\i0\cf1                 if (s1.top() == '[')\{}
\par\plain {\f0\fs20\b0\i0\cf1                 s2.pop();}
\par\plain {\f0\fs20\b0\i0\cf1                 \}}
\par\plain {\f0\fs20\b0\i0\cf1                 else\{}
\par\plain {\f0\fs20\b0\i0\cf1                 s2.push(s1.top());}
\par\plain {\f0\fs20\b0\i0\cf1                 \}}
\par\plain {\f0\fs20\b0\i0\cf1             \}}
\par\plain {\f0\fs20\b0\i0\cf1         \}}
\par\plain {\f0\fs20\b0\i0\cf1         else}
\par\plain {\f0\fs20\b0\i0\cf1             s2.push(s1.top());}
\par\plain {\f0\fs20\b0\i0\cf1         s1.pop();}
\par\plain {\f0\fs20\b0\i0\cf1     \}}
\par\plain {\f0\fs20\b0\i0\cf1     if (s2.empty())}
\par\plain {\f0\fs20\b0\i0\cf1         return true;}
\par\plain \f0\fs20\b0\i0\cf1
\par\plain {\f0\fs20\b0\i0\cf1     return false;}
\par\plain {\f0\fs20\b0\i0\cf1 \}}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs28\b1\i0\cf3 \loch\af0\hich\af0\dbch\af0\uc1\u32593\'3F\u19978\'3F\u22909\'3F\u30340\'3F\u35299\'3F\u27861\'3F\u65306\'3A}
\par\plain {\f0\fs20\b0\i0\cf5 //\loch\af0\hich\af0\dbch\af0\uc1\u26102\'3F\u38388\'3F\u22797\'3F\u26434\'3F\u24230\'3FO(n) 4ms beats 100%}
\par\plain {\f0\fs20\b0\i0\cf1         bool isValid(string s) \{}
\par\plain {\f0\fs20\b0\i0\cf1             map<char, char> parenth_dict;}
\par\plain {\f0\fs20\b0\i0\cf1             parenth_dict['('] = ')';}
\par\plain {\f0\fs20\b0\i0\cf1             parenth_dict['\{'] = '\}';}
\par\plain {\f0\fs20\b0\i0\cf1             parenth_dict['['] = ']';}
\par\plain {\f0\fs20\b0\i0\cf1             }
\par\plain {\f0\fs20\b0\i0\cf1             stack<char> aux;}
\par\plain {\f0\fs20\b0\i0\cf1             for (int i = 0; i < s.size(); i++) \{}
\par\plain {\f0\fs20\b0\i0\cf1                 if (s[i] == '(' || s[i] == '\{' || s[i] == '[') }
\par\plain {\f0\fs20\b0\i0\cf1                     aux.push(s[i]);}
\par\plain {\f0\fs20\b0\i0\cf1                 else if (aux.empty() || parenth_dict[aux.top()] != s[i])}
\par\plain {\f0\fs20\b0\i0\cf1                     return false;}
\par\plain {\f0\fs20\b0\i0\cf1                 else}
\par\plain {\f0\fs20\b0\i0\cf1                     aux.pop();}
\par\plain {\f0\fs20\b0\i0\cf1             \}}
\par\plain {\f0\fs20\b0\i0\cf1             }
\par\plain {\f0\fs20\b0\i0\cf1             return aux.empty();}
\par\plain {\f0\fs20\b0\i0\cf1             }
\par\plain {\f0\fs20\b0\i0\cf1         \}}
\par\plain {\f0\fs20\b0\i0\cf5 //\loch\af0\hich\af0\dbch\af0\uc1\u26102\'3F\u38388\'3F\u22797\'3F\u26434\'3F\u24230\'3FO(n) 4ms beats 100%}
\par\plain {\f0\fs20\b0\i0     bool isValid(string s) \{}
\par\plain {\f0\fs20\b0\i0         stack<char> st;}
\par\plain {\f0\fs20\b0\i0         for(auto c : s)\{}
\par\plain {\f0\fs20\b0\i0             if(c == '(' || c == '\{' || c == '[') st.push(c);}
\par\plain {\f0\fs20\b0\i0             else if(st.size() > 0)\{}
\par\plain {\f0\fs20\b0\i0                 if(c == ')' && st.top() == '(') st.pop();}
\par\plain {\f0\fs20\b0\i0                 else if (c == '\}' && st.top() == '\{') st.pop();}
\par\plain {\f0\fs20\b0\i0                 else if (c == ']' && st.top() == '[') st.pop();}
\par\plain {\f0\fs20\b0\i0                 else return false;}
\par\plain {\f0\fs20\b0\i0             \} else return false;}
\par\plain {\f0\fs20\b0\i0         \}}
\par\plain {\f0\fs20\b0\i0         return st.size() == 0;}
\par\plain {\f0\fs20\b0\i0     \}}
\par\plain \f0\fs20\b0\i0
\par\plain {\f0\fs28\b1\i0\cf3 \loch\af0\hich\af0\dbch\af0\uc1\u31934\'3F\u31616\'3F\u20248\'3F\u21270\'3F\u65306\'3A}
\par\plain {\f0\fs20\b0\i0\cf5 //\loch\af0\hich\af0\dbch\af0\uc1\u26102\'3F\u38388\'3F\u22797\'3F\u26434\'3F\u24230\'3FO(n) 4ms beats 100%}
\par\plain {\f0\fs20\b0\i0 bool isValid(string s)\{}
\par\plain {\f0\fs20\b0\i0     stack<char> s1;}
\par\plain \f0\fs20\b0\i0
\par\plain {\f0\fs20\b0\i0     if (s.empty())}
\par\plain {\f0\fs20\b0\i0         return true;}
\par\plain {\f0\fs20\b0\i0     else if (s.length() % 2 != 0)}
\par\plain {\f0\fs20\b0\i0         return false;}
\par\plain \f0\fs20\b0\i0
\par\plain {\f0\fs20\b0\i0     for (auto it : s)\{}
\par\plain {\f0\fs20\b0\i0         if (it == '(' || it == '\{' || it == '[')}
\par\plain {\f0\fs20\b0\i0             s1.push(it);}
\par\plain {\f0\fs20\b0\i0         else if (it == ')' && }{\f0\fs20\b1\i0 !s1.empty() && s1.top()}{\f0\fs20\b0\i0  == '(')}
\par\plain {\f0\fs20\b0\i0             s1.pop();}
\par\plain {\f0\fs20\b0\i0         else if (it == ']' && }{\f0\fs20\b1\i0 !s1.empty() && s1.top()}{\f0\fs20\b0\i0  == '[')}
\par\plain {\f0\fs20\b0\i0             s1.pop();}
\par\plain {\f0\fs20\b0\i0         else if (it == '\}' && }{\f0\fs20\b1\i0 !s1.empty() && s1.top()}{\f0\fs20\b0\i0  == '\{')}
\par\plain {\f0\fs20\b0\i0             s1.pop();}
\par\plain {\f0\fs20\b0\i0         else}
\par\plain {\f0\fs20\b0\i0             return false;}
\par\plain {\f0\fs20\b0\i0     \}}
\par\plain \f0\fs20\b0\i0
\par\plain {\f0\fs20\b0\i0     return s1.empty();}
\par\plain {\f0\fs20\b0\i0 \}}
\par\plain \f0\fs28\b1\i0\cf3
\par\plain {\f0\fs28\b1\i0\cf3 \loch\af0\hich\af0\dbch\af0\uc1\u24605\'3F\u32771\'3F\u65306\'3A}
\par\plain {\f0\fs24\b0\i0 1. \loch\af0\hich\af0\dbch\af0\uc1\u35299\'3F\u27861\'3F\u24605\'3F\u36335\'3F\u26041\'3F\u38754\'3F\u65306\'3A\line }
\par\pard\plain \tx240\tx720\li720\fi-720\ltrch\loch \ls2\ilvl0{\listtext\f0\fs24\b0\i0	\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F	}{\f0\fs24\b0\i0 \loch\af0\hich\af0\dbch\af0\uc1\u31532\'3F\u19968\'3F\u36941\'3F\u20195\'3F\u30721\'3F\u37319\'3F\u29992\'3F\u20102\'3F\u20004\'3F\u20010\'3Fstack\u27169\'3F\u25311\'3F\u25324\'3F\u21495\'3F\u21305\'3F\u37197\'3F\u30340\'3F\u36807\'3F\u31243\'3F\u12290\'3F\line }
\par\pard\plain \tx240\tx720\li720\fi-720\ltrch\loch \ls3\ilvl0{\listtext\f0\fs24\b0\i0	\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F	}{\f0\fs24\b0\i0 \loch\af0\hich\af0\dbch\af0\uc1\u20851\'3F\u20110\'3F\u26377\'3F\u25928\'3F\u25324\'3F\u21495\'3F\u34920\'3F\u36798\'3F\u24335\'3F\u30340\'3F\u19968\'3F\u20010\'3F\u26377\'3F\u36259\'3F\u30340\'3F\u23646\'3F\u24615\'3F\u26159\'3F\u65306\'3A\u26377\'3F\u25928\'3F\u34920\'3F\u36798\'3F\u24335\'3F\u30340\'3F\u23376\'3F\u34920\'3F\u36798\'3F\u24335\'3F\u20063\'3F\u24212\'3F\u35813\'3F\u26159\'3F\u26377\'3F\u25928\'3F\u34920\'3F\u36798\'3F\u24335\'3F\u12290\'3F\line \u25235\'3F\u20303\'3F\u36825\'3F\u20010\'3F\u29305\'3F\u24615\'3F\u65292\'2C\u25105\'3F\u20204\'3F\u20415\'3F\u21487\'3F\u20197\'3F\u21482\'3F\u26159\'3F\u29992\'3F\u19968\'3F\u20010\'3Fstack\u21363\'3F\u21487\'3F\u36827\'3F\u34892\'3F\u25324\'3F\u21495\'3F\u30340\'3F\u21305\'3F\u37197\'3F\u12290\'3F\u22312\'3F\u36941\'3F\u21382\'3Fs\u30340\'3F\u36807\'3F\u31243\'3F\u20013\'3F\u65292\'2C\line \u36935\'3F\u21040\'3F\u21491\'3F\u25324\'3F\u21495\'3F\u21017\'3F\u36827\'3F\u26632\'3F\u33267\'3Fs1\u20013\'3F\u65292\'2C\u22914\'3F\u26524\'3F\u36935\'3F\u21040\'3F\u24038\'3F\u25324\'3F\u21495\'3F\u65292\'2C\u21017\'3F\u21482\'3F\u38656\'3F\u35201\'3F\u21028\'3F\u26029\'3Fs1.top()\u26159\'3F\u21542\'3F\u26159\'3F\u30456\'3F\u24212\'3F\u30340\'3F\u21491\'3F\line \u25324\'3F\u21495\'3F\u21363\'3F\u21487\'3F\u12290\'3F}
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 2. \loch\af0\hich\af0\dbch\af0\uc1\u20195\'3F\u30721\'3F\u35299\'3F\u20915\'3F\u26041\'3F\u38754\'3F\u65306\'3A\line }
\par\pard\plain \tx240\tx720\li720\fi-720\ltrch\loch \ls4\ilvl0{\listtext\f0\fs24\b0\i0	\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F	}{\f0\fs24\b0\i0 \loch\af0\hich\af0\dbch\af0\uc1\u21028\'3F\u26029\'3F\u19968\'3F\u20010\'3F\u25972\'3F\u25968\'3F\u26159\'3F\u21542\'3F\u26159\'3F\u22855\'3F\u25968\'3F\u30340\'3F\u26102\'3F\u20505\'3F\u65292\'2C}{\f0\fs24\b0\i0\cf4 \loch\af0\hich\af0\dbch\af0\uc1\u29992\'3Fx % 2 != 0\u65292\'2C\u19981\'3F\u35201\'3F\u29992\'3Fx % 2 == 1\u65292\'2C\u22240\'3F\u20026\'3Fx\u21487\'3F\u33021\'3F\u26159\'3F\u36127\'3F\u25968\'3F}{\f0\fs24\b0\i0 \loch\af0\hich\af0\dbch\af0\uc1\u12290\'3F\line }
\par\pard\plain \tx240\tx720\li720\fi-720\ltrch\loch \ls4\ilvl0{\listtext\f0\fs24\b0\i0	\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F	}{\f0\fs24\b0\i0 \loch\af0\hich\af0\dbch\af0\uc1\u22312\'3F\u21028\'3F\u26029\'3F\u20004\'3F\u20010\'3F\u28014\'3F\u28857\'3F\u25968\'3Fa\u21644\'3Fb\u26159\'3F\u21542\'3F\u30456\'3F\u31561\'3F\u26102\'3F\u65292\'2C\u19981\'3F\u35201\'3F\u29992\'3F a == b\u65292\'2C\u24212\'3F\u35813\'3F\u21028\'3F\u26029\'3F\u20004\'3F\u32773\'3F\u20043\'3F\u24046\'3F\u30340\'3F\u32477\'3F\u23545\'3F\u20540\'3Ffabs(a-b)\u26159\'3F\u21542\'3F\u23567\'3F\u20110\'3F\u26576\'3F\u20010\'3F\u38408\'3F\u20540\'3F\u65292\'2C\u20363\'3F\u22914\'3F 1e-9\line }
\par\pard\plain \tx240\tx720\li720\fi-720\ltrch\loch \ls4\ilvl0{\listtext\f0\fs24\b0\i0\cf4	\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F	}{\f0\fs24\b0\i0\cf4 \loch\af0\hich\af0\dbch\af0\uc1\u22312\'3F\u38656\'3F\u35201\'3F\u20351\'3F\u29992\'3Fs1.top()\u20043\'3F\u21069\'3F\u65292\'2C\u19968\'3F\u23450\'3F\u35201\'3F\u20808\'3F\u21028\'3F\u26029\'3F\u19979\'3Fs1\u26159\'3F\u21542\'3F\u20026\'3F\u31354\'3F}{\f0\fs24\b0\i0 \loch\af0\hich\af0\dbch\af0\uc1\u65292\'2C\u20381\'3F\u27425\'3F\u31867\'3F\u25512\'3F\u22312\'3F\u35201\'3F\u20351\'3F\u29992\'3F\u23481\'3F\u22120\'3F\u30340\'3F\u20803\'3F\u32032\'3F\u30340\'3F\u26102\'3F\u20505\'3F\u65292\'2C\u19968\'3F\u23450\'3F\u20808\'3F\u24605\'3F\u32771\'3F\u19979\'3F\u35813\'3F\u23481\'3F\u22120\'3F\u29616\'3F\u22312\'3F\u30340\'3F\u29366\'3F\u24577\'3F\u26159\'3F\u21542\'3F\u20026\'3F\u31354\'3F\u12290\'3F}
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0}